version: '3.9'

services:

  db:
    image: postgres:17-alpine
    restart: always
    container_name: postgres
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 1m

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  app:
    build: 
      context: ./
      dockerfile: ./deploy/dev/Dockerfile
    restart: always
    container_name: app
    volumes:
      - ./:/code
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - db
      - elasticsearch

  celery_worker:
    build:
        context: ./
        dockerfile: ./deploy/celery/Dockerfile
    command: celery -A app.celery_tasks worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis

  celery_beat:
    build:
        context: ./
        dockerfile: ./deploy/celery/Dockerfile
    command: celery -A app.celery_tasks beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  kibana:
    image: kibana:8.14.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana.local
      - XPACK_SECURITY_ENABLED=false          # Якщо без авторизації
    ports:
      - "5601:5601"
    restart: unless-stopped


volumes:
  db:
  app:
  redis:
  elasticsearch: